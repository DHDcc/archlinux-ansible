---

-  name: Archlinux post-installation - Tweaks
   hosts: host
   connection: local
   gather_facts: false
   become: true
   vars_files:
     - ../group_vars/all/vars.yml
     - ../group_vars/all/options.yml
   tasks:

     - name: Enable trim.
       ansible.builtin.systemd_service:
         name: fstrim.timer
         enabled: true

     - name: Change swappiness value.
       ansible.builtin.copy:
         dest: "/etc/sysctl.d/99-swappiness.conf"
         content: "vm.swappiness = 10"

     - name: Disable automatic core dumps.
       ansible.builtin.copy:
         dest: "/etc/sysctl.d/50-coredump.conf"
         content: "kernel.core_pattern=|/bin/false"

     - name: Add boot parameters.
       ansible.builtin.lineinfile:
         path: "/etc/default/grub"
         regexp: '^GRUB_CMDLINE_LINUX_DEFAULT=".*"$'
         line: 'GRUB_CMDLINE_LINUX_DEFAULT="quiet loglevel=3 libahci.ignore_sss=1 nowatchdog"'
       register: grub_config

     - name: Rebuild GRUB configuration.
       ansible.builtin.command:
         cmd: /sbin/grub-mkconfig -o /boot/grub/grub.cfg
       when: grub_config.changed


     - name: Reduce the journal's size.
       ansible.builtin.lineinfile:
         path: "/etc/systemd/journald.conf"
         regexp: '^#SystemMaxUse'
         line: "SystemMaxUse=50M"

     - name: Use the BFQ scheduler.
       ansible.builtin.copy:
         dest: "/etc/udev/rules.d/60-ioschedulers.rules"
         content: |
           # set scheduler for NVMe
           ACTION=="add|change", KERNEL=="nvme[0-9]*", ATTR{queue/scheduler}="none"
           # set scheduler for SSD and eMMC
           ACTION=="add|change", KERNEL=="sd[a-z]|mmcblk[0-9]*", ATTR{queue/rotational}=="0", ATTR{queue/scheduler}="bfq"
           # set scheduler for rotating disks
           ACTION=="add|change", KERNEL=="sd[a-z]", ATTR{queue/rotational}=="1", ATTR{queue/scheduler}="bfq"

     - name: Increase virtual memory.
       ansible.builtin.copy:
         dest: "/etc/sysctl.d/80-virtualmemory.conf"
         content: |
           vm.max_map_count = 2147483642
           vm.min_free_kbytes = 1048576

     - name: Change power button behavior.
       ansible.builtin.lineinfile:
         path: "/etc/systemd/logind.conf"
         search_string: "#HandlePowerKey="
         line: "HandlePowerKey=suspend"

     - name: Create pacman hooks directory.
       ansible.builtin.file:
         path: "/etc/pacman.d/hooks"
         state: directory
       register: hooks_directory
     
     - name: Copy file to pacman hooks directory.
       ansible.builtin.copy:
         src: "95-grub-reinstall.hook"
         dest: "/etc/pacman.d/hooks"
         owner: root
         group: root
         mode: 0644
       when: hooks_directory.changed
 
     - name: Install preload (aur).
       kewlfft.aur.aur:
         name: preload
         use: "{{ options.aur_helper.name }}"
         state: present
       become_user: "{{ user.name }}"
       register: install_preload
       tags: speed_up_app_launch
 
     - name: Enable preload.
       ansible.builtin.systemd_service:
         name: preload
         enabled: true
       when: install_preload.changed
       tags: speed_up_app_launch

     - name: Install reflector (aur).
       kewlfft.aur.aur:
         name: reflector
         use: "{{ options.aur_helper.name }}"
         state: present
       become_user: "{{ user.name }}"
       register: install_reflector
       tags: mirrorlist

     - name: Backup old mirror list.
       ansible.builtin.copy:
         src: "/etc/pacman.d/mirrorlist"
         dest: "/etc/pacman.d/mirrorlist.back"
       when: install_reflector.changed
       register: backup_mirror     
  
     - name: Fetch the top 10 fastest servers.
       ansible.builtin.command:
         cmd: /sbin/reflector --latest 10 --protocol https --sort rate --save /etc/pacman.d/mirrorlist
       when: install_reflector.changed and backup_mirror.changed
       register: fastest_servers

     - name: Reload pacman.
       community.general.pacman:
         update_cache: true
       when: fastest_servers.changed
